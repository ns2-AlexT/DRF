{"ast":null,"code":"var _jsxFileName = \"/Users/alext/Documents/DjangoREST/\\u041D\\u0438\\u043A\\u043E\\u043B\\u0430\\u0438\\u0306 \\u041D\\u0430\\u0433\\u043E\\u0440\\u043D\\u044B\\u0438\\u0306/To_do/DRF/todo_project/frontend_donot_need/src/components/ProjectForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name_of_project: '',\n      authors: []\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleChangeV2(event) {\n    if (!event.target.selectedOptions) {\n      this.setState({\n        'authors': []\n      });\n      return;\n    }\n\n    let authors = [];\n\n    for (let i = 0; i < event.target.selectedOptions.length; i++) {\n      console.log('=== ', event.target.selectedOptions.item(i).value);\n      authors.push(event.target.selectedOptions.item(i).value);\n    }\n\n    console.log(authors.id);\n    this.setState({\n      'authors': authors\n    });\n    console.log('===', this.state.authors);\n  }\n\n  handleSubmit(event) {\n    this.props.create_project(this.state.name_of_project, this.state.authors);\n    console.log(this.state.name_of_project, ' **** ', this.state.authors);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => this.handleSubmit(event),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"login\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"name_of_project\",\n          value: this.state.name_of_project,\n          onChange: event => this.handleChange(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"authors\",\n        multiple: true,\n        onChange: event => this.handleChangeV2(event),\n        children: this.props.authors.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: [\" \", item.username, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 55\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        value: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProjectForm;","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_do/DRF/todo_project/frontend_donot_need/src/components/ProjectForm.js"],"names":["React","ProjectForm","Component","constructor","props","state","name_of_project","authors","handleChange","event","setState","target","name","value","handleChangeV2","selectedOptions","i","length","console","log","item","push","id","handleSubmit","create_project","preventDefault","render","map","username"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {name_of_project: '', authors: []}\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]: event.target.value\n            }\n        )\n    }\n\n    handleChangeV2(event) {\n        if (!event.target.selectedOptions) {\n            this.setState({\n                'authors': []\n            })\n            return;\n        }\n        let authors = []\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\n            console.log('=== ', event.target.selectedOptions.item(i).value)\n            authors.push(event.target.selectedOptions.item(i).value)\n        }\n        console.log(authors.id)\n        this.setState({'authors': authors})\n        console.log('===', this.state.authors)\n    }\n\n    handleSubmit(event) {\n        this.props.create_project(this.state.name_of_project, this.state.authors)\n        console.log(this.state.name_of_project, ' **** ', this.state.authors)\n        event.preventDefault()\n    }\n\n    render() {\n        return (\n            <form onSubmit={(event) => this.handleSubmit(event)}>\n                <div className=\"form-group\">\n                    <label for=\"login\">name</label>\n                    <input type=\"text\" className=\"form-control\" name=\"name_of_project\"\n                           value={this.state.name_of_project}\n                           onChange={(event) => this.handleChange(event)}/>\n                </div>\n\n                <select name='authors' multiple onChange={(event) => this.handleChangeV2(event)}>\n                    {this.props.authors.map((item) => <option value={item.id}> {item.username} </option>)}\n                </select>\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Save\"/></form>\n        );\n    }\n}\n\nexport default ProjectForm"]},"metadata":{},"sourceType":"module"}