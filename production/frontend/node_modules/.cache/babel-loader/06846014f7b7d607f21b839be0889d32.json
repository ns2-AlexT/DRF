{"ast":null,"code":"var _jsxFileName = \"/Users/alext/Documents/DjangoREST/\\u041D\\u0438\\u043A\\u043E\\u043B\\u0430\\u0438\\u0306 \\u041D\\u0430\\u0433\\u043E\\u0440\\u043D\\u044B\\u0438\\u0306/To_Do_Project/DRF/todo_project/frontend/src/components/User.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst User = _ref => {\n  let {\n    user\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.first_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.last_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: user.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = User;\n\nconst UserList = _ref2 => {\n  let {\n    users\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"User name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"First name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Last name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 34\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = UserList;\nexport default UserList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UserList\");","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_Do_Project/DRF/todo_project/frontend/src/components/User.js"],"names":["React","User","user","first_name","last_name","email","UserList","users","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACrB,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKA,IAAI,CAACC;AADV;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,gBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjBD;;KAAMJ,I;;AAmBN,MAAMK,QAAQ,GAAG,SAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC1B,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,EAaKA,KAAK,CAACC,GAAN,CAAWN,IAAD,iBAAU,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAApB,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlBD;;MAAMI,Q;AAmBN,eAAgBA,QAAhB","sourcesContent":["import React from \"react\";\n\nconst User = ({user}) => {\n    return (\n        <tr>\n            <td>\n                test\n            </td>\n            <td>\n                {user.first_name}\n            </td>\n            <td>\n                {user.last_name}\n            </td>\n            <td>\n                {user.email}\n            </td>\n        </tr>\n    )\n}\n\nconst UserList = ({users}) => {\n    return (\n        <table>\n            <th>\n                User name\n            </th>\n            <th>\n                First name\n            </th>\n            <th>\n                Last name\n            </th>\n            <th>\n                Email\n            </th>\n            {users.map((user) => <User user={user}/>)}\n        </table>\n    )\n}\nexport  default UserList"]},"metadata":{},"sourceType":"module"}