{"ast":null,"code":"var _jsxFileName = \"/Users/alext/Documents/DjangoREST/\\u041D\\u0438\\u043A\\u043E\\u043B\\u0430\\u0438\\u0306 \\u041D\\u0430\\u0433\\u043E\\u0440\\u043D\\u044B\\u0438\\u0306/To_do/DRF/todo_project/frontend/src/components/Note.js\";\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  let {\n    note,\n    delete_note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.name_of_project\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.text_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.is_active_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.author_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => delete_note(note.id),\n        type: 'button',\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Note;\n\nconst NoteList = _ref2 => {\n  let {\n    notes,\n    delete_note\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Project name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Text of note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"container\",\n      children: notes.map(note_string => /*#__PURE__*/_jsxDEV(Note, {\n        note: note_string,\n        delete_note: delete_note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/note/create',\n      children: \"New note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = NoteList;\nexport default NoteList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"NoteList\");","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_do/DRF/todo_project/frontend/src/components/Note.js"],"names":["React","Link","Note","note","delete_note","name_of_project","text_of_todo","is_active_of_todo","author_of_todo","id","NoteList","notes","map","note_string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,IAAI,GAAG,QAAyB;AAAA,MAAxB;AAACC,IAAAA,IAAD;AAAOC,IAAAA;AAAP,GAAwB;AAClC,sBACI;AAAA,4BACI;AAAA,gBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBACKH,IAAI,CAACI;AADV;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAA,gBACKJ,IAAI,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAA,6BACI;AAAQ,QAAA,OAAO,EAAE,MAAIJ,WAAW,CAACD,IAAI,CAACM,EAAN,CAAhC;AAA2C,QAAA,IAAI,EAAE,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApBD;;KAAMP,I;;AAsBN,MAAMQ,QAAQ,GAAG,SAA0B;AAAA,MAAzB;AAACC,IAAAA,KAAD;AAAQP,IAAAA;AAAR,GAAyB;AACvC,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,gBACKO,KAAK,CAACC,GAAN,CAAWC,WAAD,iBAAiB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,WAAZ;AAAyB,QAAA,WAAW,EAAET;AAAtC;AAAA;AAAA;AAAA;AAAA,cAA3B;AADL;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAmBI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxBD;;MAAMM,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\nconst Note = ({note, delete_note}) => {\n    return (\n        <tr>\n            <td>\n                {note.name_of_project}\n            </td>\n            <td>\n                {note.text_of_todo}\n            </td>\n            <td>\n                {note.is_active_of_todo}\n            </td>\n            <td>\n                {note.author_of_todo}\n            </td>\n            <td>\n                <button onClick={()=>delete_note(note.id)} type={'button'}>delete</button>\n            </td>\n        </tr>\n    )\n}\n\nconst NoteList = ({notes, delete_note}) => {\n    return (\n        <div className=\"container\">\n            <hr/>\n            <table className=\"header\">\n                <th>\n                    Project name\n                </th>\n                <th>\n                    Text of note\n                </th>\n                <th>\n                    Status\n                </th>\n                <th>\n                    Author\n                </th>\n            </table>\n            <table className='container'>\n                {notes.map((note_string) => <Note note={note_string} delete_note={delete_note}/>)}\n            </table>\n            <Link to={'/note/create'}>New note</Link>\n        </div>\n    )\n}\nexport default NoteList"]},"metadata":{},"sourceType":"module"}