{"ast":null,"code":"var _jsxFileName = \"/Users/alext/Documents/DjangoREST/\\u041D\\u0438\\u043A\\u043E\\u043B\\u0430\\u0438\\u0306 \\u041D\\u0430\\u0433\\u043E\\u0440\\u043D\\u044B\\u0438\\u0306/To_do/DRF/todo_project/frontend/src/App.js\";\n// import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Menu from \"./components/Menu.js\";\nimport UserList from \"./components/User.js\";\nimport ProjectList from \"./components/Project.js\";\nimport NoteList from \"./components/Note.js\";\nimport Footer from \"./components/Footer.js\";\nimport Error404 from \"./components/Error404.js\";\nimport NotesOfProject from \"./components/NotesOfProject.js\";\nimport UserLoginForm from \"./components/AppForLoginUser.js\";\nimport Cookies from \"universal-cookie/es6\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'users': [],\n      'projects': [],\n      'notes': [],\n      'status_of_auth': {\n        'user': '',\n        'is_in': false,\n        'token': ''\n      }\n    };\n  }\n\n  load_all_data_on_start() {\n    console.log('load all data start');\n    const headers = this.get_headers();\n    console.log('getting headers ' + headers['Authorization']);\n    axios.get('http://127.0.0.1:8000/api/users/', {\n      headers\n    }).then(response => {\n      this.setState({\n        'users': response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://127.0.0.1:8000/api/projects/', {\n      headers\n    }).then(response => {\n      this.setState({\n        'projects': response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://127.0.0.1:8000/api/notes/', {\n      headers\n    }).then(response => {\n      this.setState({\n        'notes': response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  } // let_logout() {\n  //     console.log('Clearing datas')\n  //     // this.setState({'notes': []})\n  //     // this.setState({'users': []})\n  //     // this.setState({'projects': []})\n  //     // this.setState({'token': ''})\n  //     // this.setState({'status_of_auth': {'is_in': false}}, () => this.load_all_data_on_start())\n  // }\n  // set_token_to_cook_state(token) {\n  //     const cookie = new Cookies()\n  //     cookie.set('token', token)\n  //     this.setState({'token': token})\n  // document.cookie = `token=${token}`\n  // }\n  // get_token_from_cookie() {\n  //     const cookie_from = new Cookies()\n  //     const token = cookie_from.get('token')\n  //     this.setState({'token': token}, () => this.load_all_data_on_start())\n  // }\n\n\n  get_token_from_backend(user_login, user_pass) {\n    axios.post('http://localhost:8000/api-token-auth/', {\n      username: user_login,\n      password: user_pass\n    }).then(response => {\n      this.set_token_to_cook_state(response.data['token']);\n    }).catch(error => {\n      console.log(error);\n    });\n    this.setState({\n      'status_of_auth': {\n        'user': user_login,\n        'is_in': true\n      }\n    });\n    this.load_all_data_on_start();\n  } // is_user_get_cookie() {\n  //     console.log('Token = ' + this.state.token)\n  //     return this.state.token != ''\n  // }\n\n\n  get_headers() {\n    let headers = {\n      'Content-Type': 'application/json'\n    }; // if (this.state.status_of_auth.is_in) {\n\n    headers['Authorization'] = `Token ${this.state.token}`; // }\n\n    return headers;\n  }\n\n  componentDidMount() {\n    console.log('First start'); // if (this.state.status_of_auth.is_in) {\n    //     this.get_token_from_cookie()\n    // }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          status: this.state.status_of_auth.is_in,\n          logout: () => this.let_logout()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: () => /*#__PURE__*/_jsxDEV(UserList, {\n              users: this.state.users\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 65\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/projects/\",\n            component: () => /*#__PURE__*/_jsxDEV(ProjectList, {\n              projects: this.state.projects\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/project/:id\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(NotesOfProject, {\n              notes: this.state.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 54\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/notes/\",\n            component: () => /*#__PURE__*/_jsxDEV(NoteList, {\n              notes: this.state.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login/\",\n            component: () => /*#__PURE__*/_jsxDEV(UserLoginForm, {\n              getToken: (user_login, user_pass) => this.get_token_from_backend(user_login, user_pass)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            component: Error404\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_do/DRF/todo_project/frontend/src/App.js"],"names":["React","axios","Route","BrowserRouter","Switch","Menu","UserList","ProjectList","NoteList","Footer","Error404","NotesOfProject","UserLoginForm","Cookies","App","Component","constructor","props","state","load_all_data_on_start","console","log","headers","get_headers","get","then","response","setState","data","catch","error","get_token_from_backend","user_login","user_pass","post","username","password","set_token_to_cook_state","token","componentDidMount","render","status_of_auth","is_in","let_logout","users","projects","notes"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\n\n\nimport Menu from \"./components/Menu.js\";\nimport UserList from \"./components/User.js\";\nimport ProjectList from \"./components/Project.js\";\nimport NoteList from \"./components/Note.js\";\nimport Footer from \"./components/Footer.js\";\nimport Error404 from \"./components/Error404.js\";\nimport NotesOfProject from \"./components/NotesOfProject.js\";\nimport UserLoginForm from \"./components/AppForLoginUser.js\";\nimport Cookies from \"universal-cookie/es6\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': [],\n            'projects': [],\n            'notes': [],\n            'status_of_auth': {'user': '', 'is_in': false, 'token': ''}\n        }\n    }\n\n    load_all_data_on_start() {\n        console.log('load all data start')\n        const headers = this.get_headers()\n        console.log('getting headers ' + headers['Authorization'])\n\n        axios.get('http://127.0.0.1:8000/api/users/', {headers}).then(response => {\n            this.setState({'users': response.data})\n        }).catch(error => {\n            console.log(error)\n        })\n        axios.get('http://127.0.0.1:8000/api/projects/', {headers}).then(response => {\n            this.setState({'projects': response.data})\n        }).catch(error => {\n            console.log(error)\n        })\n        axios.get('http://127.0.0.1:8000/api/notes/', {headers}).then(response => {\n            this.setState({'notes': response.data})\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    // let_logout() {\n    //     console.log('Clearing datas')\n    //     // this.setState({'notes': []})\n    //     // this.setState({'users': []})\n    //     // this.setState({'projects': []})\n    //     // this.setState({'token': ''})\n    //     // this.setState({'status_of_auth': {'is_in': false}}, () => this.load_all_data_on_start())\n    // }\n\n    // set_token_to_cook_state(token) {\n    //     const cookie = new Cookies()\n    //     cookie.set('token', token)\n    //     this.setState({'token': token})\n        // document.cookie = `token=${token}`\n    // }\n\n    // get_token_from_cookie() {\n    //     const cookie_from = new Cookies()\n    //     const token = cookie_from.get('token')\n    //     this.setState({'token': token}, () => this.load_all_data_on_start())\n    // }\n\n    get_token_from_backend(user_login, user_pass) {\n        axios.post('http://localhost:8000/api-token-auth/',\n            {username: user_login, password: user_pass}).then(response => {\n            this.set_token_to_cook_state(response.data['token'])\n        }).catch(error => {\n            console.log(error)\n        })\n        this.setState({'status_of_auth': {'user': user_login, 'is_in': true}})\n        this.load_all_data_on_start()\n    }\n\n    // is_user_get_cookie() {\n    //     console.log('Token = ' + this.state.token)\n    //     return this.state.token != ''\n    // }\n\n    get_headers() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        // if (this.state.status_of_auth.is_in) {\n        headers['Authorization'] = `Token ${this.state.token}`\n        // }\n        return headers\n    }\n\n    componentDidMount() {\n        console.log('First start')\n        // if (this.state.status_of_auth.is_in) {\n        //     this.get_token_from_cookie()\n        // }\n    }\n\n    render() {\n        return (\n            <div>\n\n                <BrowserRouter>\n\n                    < Menu status={this.state.status_of_auth.is_in} logout={() => this.let_logout()}/>\n                    <Switch>\n\n                        < Route exact path='/' component={() => <UserList users={this.state.users}/>}/>\n\n                        < Route exact path='/projects/'\n                                component={() => <ProjectList projects={this.state.projects}/>}/>\n\n                        < Route path='/project/:id'> <NotesOfProject notes={this.state.notes}/> </Route>\n\n                        < Route exact path='/notes/' component={() => <NoteList notes={this.state.notes}/>}/>\n\n                        < Route exact path='/login/'\n                                component={() => <UserLoginForm\n                                    getToken={(user_login, user_pass) =>\n                                        this.get_token_from_backend(user_login, user_pass)}\n                                />}/>\n\n                        < Route component={Error404}/>\n\n\n                    </Switch>\n\n                </BrowserRouter>\n\n                <Footer/>\n\n            </div>\n        )\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}