{"ast":null,"code":"import React from\"react\";import'bootstrap/dist/css/bootstrap.min.css';import{Link,useParams}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Note=function Note(_ref){var note=_ref.note;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:note.text_of_todo}),/*#__PURE__*/_jsx(\"td\",{children:note.author_of_todo}),/*#__PURE__*/_jsx(\"td\",{children:note.is_active_of_todo})]});};var NotesOfProject=function NotesOfProject(_ref2){var notes=_ref2.notes;var _useParams=useParams(),id=_useParams.id;var filtered_notes=notes.filter(function(note){return note.name_of_project===parseInt(id);});//Так и не смог заставить работать includes - выходит ошибка:\n// Uncaught TypeError: note.name_of_project.includes is not a function\n// let filtered_notes_1 = notes.filter((note => note.name_of_project.includes(parseInt(id))))\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsxs(\"table\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"th\",{children:\"Text of note\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Author_of_todo\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"})]}),/*#__PURE__*/_jsx(\"table\",{className:\"container\",children:filtered_notes.map(function(note_string){return/*#__PURE__*/_jsx(Note,{note:note_string});})}),/*#__PURE__*/_jsx(Link,{to:\"/note/create/?id_project=\".concat(id),children:\"New note\"})]});};export default NotesOfProject;","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_do/DRF/production/frontend/src/components/NotesOfProject.js"],"names":["React","Link","useParams","Note","note","text_of_todo","author_of_todo","is_active_of_todo","NotesOfProject","notes","id","filtered_notes","filter","name_of_project","parseInt","map","note_string"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sCAAP,CACA,OAAQC,IAAR,CAAcC,SAAd,KAA8B,kBAA9B,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CACrB,mBACI,mCACI,oBACKA,IAAI,CAACC,YADV,EADJ,cAII,oBACKD,IAAI,CAACE,cADV,EAJJ,cAOI,oBACKF,IAAI,CAACG,iBADV,EAPJ,GADJ,CAaH,CAdD,CAgBA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,OAAa,IAAXC,CAAAA,KAAW,OAAXA,KAAW,CAChC,eAAWP,SAAS,EAApB,CAAKQ,EAAL,YAAKA,EAAL,CACA,GAAIC,CAAAA,cAAc,CAAGF,KAAK,CAACG,MAAN,CAAa,SAAAR,IAAI,QAAIA,CAAAA,IAAI,CAACS,eAAL,GAA0BC,QAAQ,CAACJ,EAAD,CAAtC,EAAjB,CAArB,CACA;AACA;AACA;AAEA,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,aADJ,cAEI,eAAO,SAAS,CAAC,QAAjB,wBACI,oCADJ,cAII,sCAJJ,cAOI,8BAPJ,GAFJ,cAaI,cAAO,SAAS,CAAC,WAAjB,UACKC,cAAc,CAACI,GAAf,CAAmB,SAACC,WAAD,qBAAiB,KAAC,IAAD,EAAM,IAAI,CAAEA,WAAZ,EAAjB,EAAnB,CADL,EAbJ,cAgBI,KAAC,IAAD,EAAM,EAAE,oCAA8BN,EAA9B,CAAR,sBAhBJ,GADJ,CAoBH,CA3BD,CA6BA,cAAeF,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link, useParams} from \"react-router-dom\";\n\nconst Note = ({note}) => {\n    return (\n        <tr>\n            <td>\n                {note.text_of_todo}\n            </td>\n            <td>\n                {note.author_of_todo}\n            </td>\n            <td>\n                {note.is_active_of_todo}\n            </td>\n        </tr>\n    )\n}\n\nconst NotesOfProject = ({notes}) => {\n    let {id} = useParams()\n    let filtered_notes = notes.filter(note => note.name_of_project === (parseInt(id)))\n    //Так и не смог заставить работать includes - выходит ошибка:\n    // Uncaught TypeError: note.name_of_project.includes is not a function\n    // let filtered_notes_1 = notes.filter((note => note.name_of_project.includes(parseInt(id))))\n\n    return (\n        <div className=\"container\">\n            <hr/>\n            <table className=\"header\">\n                <th>\n                    Text of note\n                </th>\n                <th>\n                    Author_of_todo\n                </th>\n                <th>\n                    Status\n                </th>\n            </table>\n            <table className='container'>\n                {filtered_notes.map((note_string) => <Note note={note_string}/>)}\n            </table>\n            <Link to={`/note/create/?id_project=${id}`} >New note</Link>\n        </div>\n    )\n}\n\nexport default NotesOfProject"]},"metadata":{},"sourceType":"module"}