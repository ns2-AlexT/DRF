{"ast":null,"code":"var _jsxFileName = \"/Users/alext/Documents/DjangoREST/\\u041D\\u0438\\u043A\\u043E\\u043B\\u0430\\u0438\\u0306 \\u041D\\u0430\\u0433\\u043E\\u0440\\u043D\\u044B\\u0438\\u0306/To_do/DRF/todo_project/frontend/src/components/NotesOfProject.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  let {\n    note\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.text_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.author_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: note.is_active_of_todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Note;\n\nconst NotesOfProject = _ref2 => {\n  _s();\n\n  let {\n    notes\n  } = _ref2;\n  let {\n    id\n  } = useParams();\n  let filtered_notes = notes.filter(note => note.name_of_project === parseInt(id)); //Так и не смог заставить работать includes - выходит ошибка:\n  // Uncaught TypeError: note.name_of_project.includes is not a function\n  // let filtered_notes_1 = notes.filter((note => note.name_of_project.includes(parseInt(id))))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Text of note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Author_of_todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"container\",\n      children: filtered_notes.map(note_string => /*#__PURE__*/_jsxDEV(Note, {\n        note: note_string\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 54\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/note/create',\n      children: \"New note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotesOfProject, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n\n_c2 = NotesOfProject;\nexport default NotesOfProject;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"NotesOfProject\");","map":{"version":3,"sources":["/Users/alext/Documents/DjangoREST/Николай Нагорный/To_do/DRF/todo_project/frontend/src/components/NotesOfProject.js"],"names":["React","Link","useParams","Note","note","text_of_todo","author_of_todo","is_active_of_todo","NotesOfProject","notes","id","filtered_notes","filter","name_of_project","parseInt","map","note_string"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAAQC,IAAR,EAAcC,SAAd,QAA8B,kBAA9B;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACrB,sBACI;AAAA,4BACI;AAAA,gBACKA,IAAI,CAACC;AADV;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKD,IAAI,CAACE;AADV;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAA,gBACKF,IAAI,CAACG;AADV;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAdD;;KAAMJ,I;;AAgBN,MAAMK,cAAc,GAAG,SAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAChC,MAAI;AAACC,IAAAA;AAAD,MAAOR,SAAS,EAApB;AACA,MAAIS,cAAc,GAAGF,KAAK,CAACG,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACS,eAAL,KAA0BC,QAAQ,CAACJ,EAAD,CAAvD,CAArB,CAFgC,CAGhC;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,SAAS,EAAC,QAAjB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAaI;AAAO,MAAA,SAAS,EAAC,WAAjB;AAAA,gBACKC,cAAc,CAACI,GAAf,CAAoBC,WAAD,iBAAiB,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cAApC;AADL;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBK,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA3BD;;GAAMR,c;UACSN,S;;;MADTM,c;AA6BN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link, useParams} from \"react-router-dom\";\n\nconst Note = ({note}) => {\n    return (\n        <tr>\n            <td>\n                {note.text_of_todo}\n            </td>\n            <td>\n                {note.author_of_todo}\n            </td>\n            <td>\n                {note.is_active_of_todo}\n            </td>\n        </tr>\n    )\n}\n\nconst NotesOfProject = ({notes}) => {\n    let {id} = useParams()\n    let filtered_notes = notes.filter(note => note.name_of_project === (parseInt(id)))\n    //Так и не смог заставить работать includes - выходит ошибка:\n    // Uncaught TypeError: note.name_of_project.includes is not a function\n    // let filtered_notes_1 = notes.filter((note => note.name_of_project.includes(parseInt(id))))\n\n    return (\n        <div className=\"container\">\n            <hr/>\n            <table className=\"header\">\n                <th>\n                    Text of note\n                </th>\n                <th>\n                    Author_of_todo\n                </th>\n                <th>\n                    Status\n                </th>\n            </table>\n            <table className='container'>\n                {filtered_notes.map((note_string) => <Note note={note_string}/>)}\n            </table>\n             <Link to={'/note/create'}>New note</Link>\n        </div>\n    )\n}\n\nexport default NotesOfProject"]},"metadata":{},"sourceType":"module"}